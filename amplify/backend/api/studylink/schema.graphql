type StudyGroupCard @model @auth(rules: [{allow: public}]) {
  id: ID!
  groupName: String!
  numMembers: Int!
  className: String!
  acceptingMembers: Boolean!
  description: String!
  groupOwner: AWSEmail!
  image: AWSURL
  memberList: [String!]
  Announcements: [Announcement] @hasMany(indexName: "byStudyGroupCard", fields: ["id"])
  membercards: [MemberCard] @manyToMany(relationName: "StudyGroupCardMemberCard")
}

type MemberCard @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: AWSEmail
  studygroupcards: [StudyGroupCard] @manyToMany(relationName: "StudyGroupCardMemberCard")
}

type ProfileCard @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String!
  lastName: String
  email: AWSEmail
  major: String
  image: AWSURL
  classesEnrolled: String
}

type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  announcementID: ID! @index(name: "byAnnouncement")
  username: AWSEmail
  comment: String
  likes: Int
}

type Announcement @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String!
  username: AWSEmail!
  date: AWSDateTime!
  announcement: String!
  Comments: [Comment] @hasMany(indexName: "byAnnouncement", fields: ["id"])
  studygroupcardID: ID! @index(name: "byStudyGroupCard")
}
 